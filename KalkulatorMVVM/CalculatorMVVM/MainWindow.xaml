<Window x:Class="CalculatorMVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        
        xmlns:vm="clr-namespace:CalculatorMVVM.VIewModel"
        
        xmlns:local="clr-namespace:CalculatorMVVM"
        mc:Ignorable="d"
        Title="Kalkulator" Height="180" Width="400" ResizeMode="NoResize">
    <!--Dodanie klucza dla instancji: 
            modelu widoku  - calculating
            konwertera - decimalToStringConverter        
    -->
    <Window.Resources>
        <vm:Calculating x:Key="calculating"/>
        <vm:DecimalToStringConverter x:Key="decimalToStringConverter"/>
    </Window.Resources>
    <!--Ustawienie kontekstu danych w obrębie Grida na obiekt modelu widoku o nazwie calculing-->
        <Grid  DataContext="{StaticResource calculating}">
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="2*"/>
          
        </Grid.RowDefinitions>
      
        <Grid Grid.Row="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="3*"/>
                
            </Grid.ColumnDefinitions>
            <!--powiązanie pola TextBoxForNumber z własnością modelu widoku FirstArg 
                komunikacja dwustronna
                w związku z tym, że text jest innego typu niż własność FirstArg
                należy użyć konwertera, który trzeba samodzielnie zaimplementować 
                i jego instancję utworzyć po stronie XAMLA 
            -->
            <local:TextBoxForNumber x:Name="textBoxFirstArg" Grid.Column="0"  
                                        HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10" 
               Text="{
                        Binding Path=FirstArg, 
                        Mode=TwoWay, 
                        Converter={StaticResource decimalToStringConverter} 
                    }"
           />


            <!--Powiązanie wyświetlanych w comboBox pozycji z tablicą symboli operacji OperationName 
                własność po stronie modelu widoku oraz zaznaczonej pozycji z SymbolOfCurrentOperation
                równeż własność po stronie modelu widoku
            -->
            <ComboBox Margin="0,10,0,10"  x:Name="comboBoxDzialanie" 
                Grid.Column="1" FontSize="12" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                ItemsSource="{Binding Path=OperationsName}"
                SelectedItem="{Binding Path=SymbolOfCurrentOperation}"                     
            
            />

            <local:TextBoxForNumber x:Name="textBoxSecondArg" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="10"
                        Text="{Binding Path=SecondArg, 
                               Mode=TwoWay, 
                               Converter={StaticResource decimalToStringConverter}
                             }"
            />

        </Grid>
        <!---->
            <Label x:Name="labelInfo"  Grid.Row="1" Content="{Binding InfoText, Mode=TwoWay}" Margin=" 10,2,10,0" HorizontalAlignment="Center" />
        <!--Powiązanie pola tekstowego z własnością reprezntującą wynik Result -->
            <TextBlock x:Name="textBlockResult" Grid.Row="2" Margin="10" FontSize="24" HorizontalAlignment="Left"
                   Text="{Binding Result, Mode=TwoWay, Converter={StaticResource decimalToStringConverter}}"
        />
        
    </Grid>
</Window>
